name : DevSecOps pipeline

on : 
  push:

env:
  BUILD_ARTIFACT_NAME: build-artifacts

jobs :
  # 1) checkout, build, run unit tests, upload build artifacts
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      artifact_uploaded: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Run unit tests (Maven)
        working-directory: backend
        run: |
          chmod +x mvnw
          ./mvnw -B test

      - name: Package backend (skip tests)
        working-directory: backend
        run: |
          ./mvnw -B -DskipTests package

      - name: Collect build artifacts
        run: |
          mkdir -p ./ci_artifacts/backend
          cp ${GITHUB_WORKSPACE}/backend/target/*.jar ./ci_artifacts/backend/ || true
          # include any other files you want preserved (e.g. config, compiled resources)
          ls -la ./ci_artifacts || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}
          path: ./ci_artifacts

  # 2) SCA scan with Snyk (checkout build artifacts, run Snyk against pom.xml then upload results)
  sca-snyk:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}

      - name: Make mvnw executable (important)
        run: chmod +x ./backend/mvnw

      - name: Setup Node (for Snyk CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk auth $SNYK_TOKEN || true

      - name: Run Snyk SCA (backend - Maven)
        working-directory: backend
        run: |
          # run Snyk test on the backend pom (output json to file)
          snyk test --file=pom.xml --json > "${{ github.workspace }}/snyk-backend-result.json" || true

          # verify the report
          ls -la "${{ github.workspace }}/snyk-backend-result.json"

      - name: Upload Snyk results
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: snyk-backend-result.json

# Alternative: Manual build if autobuild doesn't work
  sast-codeql-manual:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Manual Build
        working-directory: backend
        run: |
          chmod +x mvnw
          ./mvnw clean compile -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"
          output: sarif-results
          upload: false

      - name: Upload CodeQL SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: sarif-results/java.sarif