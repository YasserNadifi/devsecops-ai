pipeline {
  agent any
  environment {
    DOCKERHUB_CREDENTIALS = 'dockerhub-creds'  
    BACKEND_IMAGE         = 'yasser2003/waterwise-backend'
    FRONTEND_IMAGE        = 'yasser2003/waterwise-frontend'
  }
  stages {

    stage('Docker Login') {
      steps {
        withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
        }
      }
    }

    stage('Build Images') {
      steps {
        sh 'docker compose build --pull'
      }
    }

    stage('Tag & Push Backend') {
      steps {
        script {
          def backendId = sh(script: 'docker compose images -q backend', returnStdout: true).trim()
          sh "docker tag ${backendId} ${env.BACKEND_IMAGE}:latest"
          sh "docker push ${env.BACKEND_IMAGE}:latest"
        }
      }
    }

    stage('Tag & Push Frontend') {
      steps {
        script {
          def frontendId = sh(script: 'docker compose images -q frontend', returnStdout: true).trim()
          sh "docker tag ${frontendId} ${env.FRONTEND_IMAGE}:latest"
          sh "docker push ${env.FRONTEND_IMAGE}:latest"
        }
      }
    }

    stage('Cleanup') {
      steps {
        sh 'docker logout'
        sh "docker rmi ${env.BACKEND_IMAGE}:latest ${env.FRONTEND_IMAGE}:latest || true"
      }
    }
  }

  post {
    always {
      echo 'Pipeline finished.'
    }
    failure {
      echo 'One or more stages failed.'
    }
  }
}
